stages:
  - build-org
  - filter-css-classes
  - publish

org-generation:
  image:
    name: silex/emacs:28.1-alpine-ci
  before_script:
    - apk update && apk add graphviz ttf-freefont
    # If cache succeeded, copy to emacs home
    - if [ -d elpa ]; then cp -rf elpa /root/.emacs.d; fi
  cache:
    key: org-files
    paths:
      - .timestamps
      - elpa/
  artifacts:
    paths:
      - content/posts
      - static/res
  script:
    - emacs -batch -q -l export.el -f org-publish-with-different-timestamp-directory
    # Copy elpa packages to current directory for cache
    - cp -rf /root/.emacs.d/elpa/ .
  stage: build-org

css-theme:
  image: node:16-alpine
  before_script:
    - cd syntax-extractor && yarn install && cd ..
  script:
    - node syntax-extractor
  artifacts:
    paths:
      - assets/scss/_syntax.scss
  stage: filter-css-classes

pages:
  image: ruby:2.7.4-alpine3.14
  cache:
    key: jekyll
    paths:
      - .bundle_cache/
  before_script:
    - apk update
    - apk add build-base
    - bundle install --path .bundle_cache/
  script:
    - JEKYLL_ENV=production bundle exec jekyll build -d public
  artifacts:
    paths:
      - public
  stage: publish
  only:
    - master
